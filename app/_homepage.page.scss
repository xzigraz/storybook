@import "../ui-component/scss/utility.imports";

.homepage {
	overflow-x: hidden;
	.hero-panel {
		width: 100%;
		height: 100vh !important;
		background: {
			color: $quinaryColor;
		}
		margin: {
			bottom: unset;
		}
		.content-wrapper {
			display: flex;
			height: 100%;
			flex-direction: column;
			justify-content: center;
			align-items: center;
		}
	}
	.scrolling-indicator {
		position: absolute;
		margin: 0 auto;
		bottom: rem(20);
		width: rem(30);
		height: rem(50);
		border-radius: rem(30);
		border: rem(5) solid $secondaryColor;
		opacity: 0.6;
		.dot {
			position: absolute;
			width: rem(16);
			height: rem(16);
			left: calc(15px - 13px);
			animation: bounding 2s ease-in-out infinite;
			background: {
				color: $secondaryColor;
			}
			border-radius: 100%;
		}
	}
	.portrait-container {
		position: relative;
		filter: drop-shadow(0 0 #{rem(128)} $quaternaryColor);
		h1 {
			position: absolute;
			bottom: rem(-4);
			margin: 0;
			font: {
				size: rem(37);
				weight: 900;
			}
			text-transform: uppercase;
			color: $quaternaryColor;
			text-shadow: rem(2) 0 0 $quinaryColor;
			&:after {
				content: "Who is Daniel?";
				position: absolute;
				left: 0;
				font: {
					size: rem(37);
					weight: 900;
				}
				text-transform: uppercase;
				transform: rotate3d(1, 0, 0, 220deg);
				bottom: rem(-24);
				opacity: 0.5;
			}
		}
	}
	.graph-container {
		width: 100%;
		height: rem(600);
	}
	.about-me {
		margin: {
			bottom: 0;
		}
		min-height: rem(300);
		&.husband {
			background: {
				color: rgba($quinaryColor, 0.1);
			}
			img {
				top: rem(20);
			}
		}
		&.father {
			background: {
				color: rgba($quaternaryColor, 0.1);
			}
			height: rem(400) !important;
		}
		&.engineer {
			background: {
				image: linear-gradient(124deg, rgba($primaryColor, 0.2), rgba($secondaryColor, 0.2), rgba($tertiaryColor, 0.2), rgba($quaternaryColor, 0.2), rgba($quinaryColor, 0.2)) !important;
				size: 1800% 1800%;
			}
			animation: rainbow 18s ease infinite;
			.content-wrapper {
				p {
					max-width: unset;
					margin: {
						right: rem(480);
					}
				}
				img {
					top: rem(80);
					width: rem(400);
				}
			}
		}
		&.fishkeeper {
			background: {
				color: rgba($primaryColor, 0.1);
			}
			&.align-right {
				&.section-in-view {
					img {
						transform: rotate(-3deg);
					}
				}
			}
			.content-wrapper {
				p {
					max-width: unset;
					margin: {
						left: rem(420);
					}
				}
				img {
					width: rem(350);
				}
			}
		}
		&.gamer {
			background: {
				color: rgba($secondaryColor, 0.1);
			}
			.content-wrapper {
				p {
					max-width: unset;
					margin: {
						right: rem(570);
					}
				}
				img {
					width: rem(500);
				}
			}
		}
		&.explorer {
			background: {
				color: rgba($tertiaryColor, 0.1);
			}
			.content-wrapper {
				p {
					max-width: unset;
					margin: {
						left: rem(470);
					}
					span {
						color: $primaryColor;
					}
					em {
						font: {
							size: rem(14);
						}
					}
				}
				img {
					width: rem(400);
				}
			}
		}
		&.plug-for-myself {
			background: {
				image: linear-gradient(
					to right, 
					rgba($primaryColor, 0.3) 0%, 
					rgba($primaryColor, 0.3) 20%, 
					rgba($secondaryColor, 0.3) 20%, 
					rgba($secondaryColor, 0.3) 40%, 
					rgba($tertiaryColor, 0.3) 40%, 
					rgba($tertiaryColor, 0.3) 60%, 
					rgba($quaternaryColor, 0.3) 60%, 
					rgba($quaternaryColor, 0.3) 80%, 
					rgba($quinaryColor, 0.3) 80%, 
					rgba($quinaryColor, 0.3) 100%) !important;
			}
			min-height: unset;
			.content-wrapper {
				align-items: center;
				p {
					font: {
						weight: 900;
					}
					opacity: 1;
					color: $secondaryColor;
				}
			}
		}
		// commented out code is to experiment with transition from display none using allow-discrete and then use the @starting-style rule.
		&.align-left {
			&.section-in-view {
				h2 {
					transform: translateX(0);
				}
				img {
					// display: block;
					right: rem(30);
					transform: translateX(0) rotate(10deg);
					// @starting-style {
					// 	transform: translateX(calc(-100vw - 30px));
					// }
				}
			}
			h2 {
				transform: translateX(rem(-1000));
				transition: transform ease 0.4s;
			}
			img {
				// display: none;
				transform: translateX(calc(-100vw - 30px)) rotate(-35deg);
				transition: transform ease 0.3s;
				// transition-behavior: allow-discrete;
			}
		}
		&.align-right {
			&.section-in-view {
				h2 {
					transform: translateX(0);
				}
				img {
					left: rem(30);
					transform: translateX(0) rotate(-15deg);
				}
			}
			h2, p {
				margin: {
					left: auto;
				}
				text-align: right;
			}
			h2 {
				transform: translateX(calc(100vw + 300px));
				transition: transform ease 0.4s;
			}
			img {
				transform: translateX(calc(100vw + 30px)) rotate(30deg);
				transition: transform ease 0.3s;
			}
		}
		&.section-in-view {
			.content-wrapper {
				p {
					opacity: 1;
				}
			}
		}
		.content-wrapper {
			position: relative;
			display: flex;
			flex-direction: column;
			justify-content: center;
			p {
				opacity: 0;
				max-width: 70vw;
				font: {
					size: rem(18);
				}
				color: $secondaryColor;
				line-height: rem(24);
				transition: opacity ease 0.8s;
			}
			img {
				width: rem(200);
				position: absolute;
				border: rem(10) solid $quinaryColor;
				box-shadow: 0 0 0 rem(2) $secondaryColor;
				border-radius: rem(15);
				object-fit: cover;
			}
		}
		h2 {
			display: flex;
			align-items: center;
			gap: rem(5);
			font: {
				size: rem(30);
			}
			color: $secondaryColor;
			span {
				color: rgba($primaryColor, 0.7);
				text-shadow: rem(1) 0 rgba($secondaryColor, 0.3);
			}
		}
	}
	// mobile
	@include breakpoint(max-width $breakpointsMobile) {
		.about-me {
			&.section-in-view {
				.content-wrapper {
					p {
						
					}
				}
			}
			&.align-left {
				&.section-in-view {
					img {
						right: rem(-60);
					}
				}
			}
			&.align-right {
				&.section-in-view {
					img {
						left: rem(-80);
					}
				}
			}
			&.father {
				height: auto !important;
			}
			&.engineer {
				h2 {
					white-space: nowrap;
					margin: {
						bottom: rem(230);
					}
				}
				.content-wrapper {
					p {
						margin: {
							right: unset;
						}
					}
				}
			}
			&.fishkeeper {
				&.align-right {
					&.section-in-view {
						img {
							top: rem(46);
							left: rem(-10);
						}
					}
				}
				h2 {
					margin: {
						bottom: rem(270);
					}
				}
				.content-wrapper {
					p {
						margin: {
							left: unset;
						}
					}
				}
			}
			&.gamer {
				&.align-left {
					&.section-in-view {
						img {
							top: rem(70);
							right: rem(-80);
						}
					}
				}
				h2 {
					margin: {
						bottom: rem(300);
					}
				}
				.content-wrapper {
					p {
						margin: {
							right: unset;
						}
					}
				}
			}
			.content-wrapper {
				p {
					font: {
						size: rem(22);
					}
					z-index: 1;
					text-shadow: rem(1) rem(1) rem(1) $quinaryColor;
				}
			}
			&.explorer {
				&.align-right {
					&.section-in-view {
						img {
							top: rem(70);
							left: rem(-10);
						}
					}
				}
				h2 {
					margin: {
						bottom: rem(300);
					}
				}
				.content-wrapper {
					p {
						margin: {
							left: unset;
						}
					}
				}
			}
		}
	}
	// tablet
	@include breakpoint($breakpointsTablet) {
		.about-me {
			&.section-in-view {
				.content-wrapper {
					p {
						
					}
				}
			}
			&.align-left {
				&.section-in-view {
					img {
						right: rem(-60);
					}
				}
			}
			&.align-right {
				&.section-in-view {
					img {
						left: rem(-80);
					}
				}
			}
			&.father {
				height: auto !important;
			}
			&.engineer {
				h2 {
					white-space: nowrap;
					margin: {
						bottom: rem(230);
					}
				}
				.content-wrapper {
					p {
						margin: {
							right: unset;
						}
					}
				}
			}
			&.fishkeeper {
				&.align-right {
					&.section-in-view {
						img {
							top: rem(46);
							left: rem(-10);
						}
					}
				}
				h2 {
					margin: {
						bottom: rem(270);
					}
				}
				.content-wrapper {
					p {
						margin: {
							left: unset;
						}
					}
				}
			}
			&.gamer {
				&.align-left {
					&.section-in-view {
						img {
							top: rem(70);
							right: rem(-80);
						}
					}
				}
				h2 {
					margin: {
						bottom: rem(300);
					}
				}
				.content-wrapper {
					p {
						margin: {
							right: unset;
						}
					}
				}
			}
			.content-wrapper {
				p {
					font: {
						size: rem(22);
					}
					z-index: 1;
					text-shadow: rem(1) rem(1) rem(1) $quinaryColor;
				}
			}
			&.explorer {
				&.align-right {
					&.section-in-view {
						img {
							top: rem(70);
							left: rem(-10);
						}
					}
				}
				h2 {
					margin: {
						bottom: rem(300);
					}
				}
				.content-wrapper {
					p {
						margin: {
							left: unset;
						}
					}
				}
			}
		}
	}
	// desktop
	@include breakpoint(min-width $breakpointsDesktop) {

	}
}

@keyframes rainbow {
	0% {
		background-position: 0% 82%
	}

	50% {
		background-position: 100% 19%
	}

	100% {
		background-position: 0% 82%
	}
}

@keyframes bounding {
	0% {
		top: rem(3);
	}
	50% {
		top: rem(21);
	}
	100% {
		top: rem(3);
	}
}